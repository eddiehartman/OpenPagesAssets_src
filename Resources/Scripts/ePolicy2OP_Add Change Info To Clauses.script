<?xml version="1.0" encoding="UTF-8"?><MetamergeConfig Cycle="79" UUID="137ec49d-50c0-475c-981f-2f0c480a44e2" created="Tue Oct 06 14:16:54 CEST 2020" createdBy="eddie" main="ePolicy2OP_Add Change Info To Clauses" modified="Tue Feb 16 17:40:49 CET 2021" modifiedBy="edbir" project="POC_MVP" version="7.1.1">
    <Script name="ePolicy2OP_Add Change Info To Clauses">
        <ModTime>1613493649192</ModTime>
        <parameter name="includeFiles"/>
        <parameter name="script"><![CDATA[// Now to process clause controls and update OpenPages as needed

// If validating or in debug mode, skip this script
if (debug || !doMigration || skipToEnd || typeof updates == "undefined" || updates == null) {
	return; // do nothing
}

if ("Draft".equalsIgnoreCase(targetStatus)) {
	return;
}

timer.start("Clause Change History");
log("Updating Clause Control Change History in the various Clauses...");

// Get the keys to the Control Clause updates HashMap and sort them
var keys = updates.proc.keySet().toArray();
java.util.Arrays.sort(keys);

// Prepare an Entry for use with the op.update() method
var entry = system.newEntry();

var updateCount = {success: 0, failed: 0};

// Loop through the REFs
for (var ref in keys) {
	log("Looking at " + ref);
	
	// Grab the deviation (change) object from the map
	var changeObj = updates.proc[ref];
	var changes = changeObj.changes;
 
	// Set up the Entry with the values of Attributes requiring updating
	entry.removeAllAttributes();

	if (changes.length == 0) {
		var changeHistory = "No changes made to Clause Controls"		
	} else {
		var ccChanges = [];
		for (var i = 0; i < changes.length; i++) {
			var thisChange = changes[i];
	
			var ccType = devMapObj.getCCType(thisChange.ref);
			var fields = [];
			for (var field in thisChange) {
				if (field.startsWith("GTS") && !field.contains("_TEMPLATE")) {
					var fieldNum = 3 + (system.toInt(field.substring(field.length-1))-2)*2;
					var fieldName = devMapObj.ccTypes[ccType].fieldNames[fieldNum];
					
					fields.push(field.substring(field.length-4)
											+ " ("
											+ fieldName.replaceAll("Template ", "")
												.replaceAll("OpenPages ", "")
											+ ")");
				}
			}
			
			ccChanges.push(thisChange.ref + ": " + fields.join(", "));
		}	
		
		var changeHistory = "Fields changed for Clause Controls: " + ccChanges.join(" | ");
	}
	
	// Set up the id and name - always required for an update to OpenPages
	entry["Resource ID"] = changeObj.id;
	
	entry.name = changeObj.name;
	entry.description = changeObj.desc;
	entry["GTS-Clause:Change Docu"] = changeHistory

	// Get the updated OpenPages object - it could be in either for the maps (one for RV and one for RR)
	var ccType = devMapObj.getCCType(ref);	

	op.log("Change History for " + ref + ": " + entry.toJSON());
	
	try {
		var updatedClause = op.update(entry, {objectType: "Procedure", id: changeObj.id});

		//log("Updated " + ref + " to " + updatedClause.toJSON());
		updateCount.success++;
	} catch (ex) {
		updateCount.failed++;
		log("ERROR", "Error updating " 
						+ " Clause ("
						+ ref
						+ ") - "
						+ ex);
	}	
}

timer.stop("Clause Change History");
log("Update result - success: " + updateCount.success + "   failed: " + updateCount.failed);]]></parameter>
    </Script>
</MetamergeConfig>