<?xml version="1.0" encoding="UTF-8"?><MetamergeConfig Cycle="23" UUID="2cc15cdd-647d-477f-a0f2-a6367726ebdf" created="Wed Aug 12 15:39:55 CEST 2020" createdBy="eddie" main="z_scanEPolicyTables" modified="Tue Feb 16 17:40:56 CET 2021" modifiedBy="edbir" project="POC_MVP" version="7.1.1">
    <AssemblyLine name="z_scanEPolicyTables">
        <ModTime>1613493656195</ModTime>
        <Settings>
            <parameter name="ALPoolSettingsDialog">showALPoolSettings</parameter>
            <parameter name="automapattributes">false</parameter>
            <parameter name="createTombstones">false</parameter>
            <parameter name="includeGlobalPrologs">true</parameter>
            <parameter name="includePrologs">Script_Lib</parameter>
            <parameter name="nullBehaviorDialog">showNullBehavior</parameter>
        </Settings>
        <Hooks/>
        <CheckpointConfig/>
        <SandboxConfig/>
        <SimulationConfig>
            <SimulationStates>
                <Component name="ePolicy_db" state="Enabled"/>
                <Component name="Scan" state="Enabled"/>
            </SimulationStates>
            <ProxySettings/>
        </SimulationConfig>
        <LogConfig/>
        <ContainerEF name="EntryFeedContainer"/>
        <ContainerDF name="DataFlowContainer">
            <Connector name="ePolicy_db">
                <InheritFrom>/Connectors/ePolicy_db_IW</InheritFrom>
                <ModTime>1599244989888</ModTime>
                <ConnectorMode>Iterator</ConnectorMode>
                <ConnectorState>Passive</ConnectorState>
                <Configuration>
                    <InheritFrom>[parent]</InheritFrom>
                </Configuration>
                <Parser>
                    <InheritFrom>[parent]</InheritFrom>
                </Parser>
                <AttributeMap name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                </AttributeMap>
                <AttributeMap name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                </AttributeMap>
                <DeltaSettings>
                    <WhenToCommit>After every database operation</WhenToCommit>
                    <RowLocking>SERIALIZABLE</RowLocking>
                    <ChangeDetectionMode>DETECT_ALL</ChangeDetectionMode>
                </DeltaSettings>
                <Schema name="Input">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
                <Schema name="Output">
                    <InheritFrom>[parent]</InheritFrom>
                </Schema>
                <LinkCriteria>
                    <InheritFrom>[parent]</InheritFrom>
                </LinkCriteria>
                <Hooks>
                    <InheritFrom>[parent]</InheritFrom>
                    <Hook name="after_initialize">
                        <InheritFrom>[no inheritance]</InheritFrom>
                        <Name>after_initialize</Name>
                        <Script>db = thisConnector.connector;</Script>
                        <Enabled>true</Enabled>
                    </Hook>
                </Hooks>
                <CheckpointConfig/>
                <SandboxConfig/>
                <Reconnect>
                    <InheritFrom>[parent]</InheritFrom>
                    <ReconnectRules/>
                </Reconnect>
                <Operations/>
                <PoolDefinition>
                    <InheritFrom>[parent]</InheritFrom>
                </PoolDefinition>
                <PoolInstance/>
            </Connector>
            <Script name="Scan">
                <ModTime>1599245019634</ModTime>
                <parameter name="script"><![CDATA[lookfor = {
	Delayed: true,
	Exception: true,
	Comment: true
}
lookfor["FORMAT"] = true;

tables = db.queryTables();
cnt = 0;

for (table in tables) {
	//log(table);
	db.setParam("jdbcTable", table);
	db.initialize(null);
	db.selectEntries();
	e = db.getNextEntry();
	if (e == null) continue;
	names = e.getAttributeNames();
	for (name in names) {
		for (checkfor in lookfor) {
			checkfor = checkfor.toUpperCase();
			if (name.toUpperCase().contains(checkfor)) {
				log(LJ(table, 35, cnt++) + name);
			}
		}
	}
}]]></parameter>
            </Script>
        </ContainerDF>
        <ThreadOptions/>
        <Operations/>
        <InitParams>
            <Schema name="AssemblyLineInitParams"/>
        </InitParams>
    </AssemblyLine>
</MetamergeConfig>